import { useState } from "react";
import type { NextPage } from "next";
import { MetaHeader } from "~~/components/MetaHeader";
import { Leaderboard, Portfolio, Round, Vaults } from "~~/components/vaults-of-fortune/";
import { useScaffoldEventSubscriber } from "~~/hooks/scaffold-eth";

/** Homepage renders all of the child components and manages round start/end modals
 *
 * when round starts, modal pops up to let users know
 * when round ends, modal pops up showing the ROI results generated by VRF
 */

const Home: NextPage = () => {
  const [showRoundStartModal, setShowRoundStartModal] = useState(false);
  const [isRoundEnd, setIsRoundEnd] = useState(false);
  const [roundNumber, setRoundNumber] = useState(0);
  const [roundResults, setRoundResults] = useState({
    contestNumber: 0,
    roundNumber: 0,
    lowRiskVaultROI: 0,
    mediumRiskVaultROI: 0,
    highRiskVaultROI: 0,
  });

  useScaffoldEventSubscriber({
    contractName: "Market",
    eventName: "RoundStart",
    listener: logs => {
      logs.map(log => {
        const { roundNumber } = log.args;
        setShowRoundStartModal(true);
        setRoundNumber(Number(roundNumber));
      });
    },
  });

  useScaffoldEventSubscriber({
    contractName: "Market",
    eventName: "RoundROIResults",
    listener: logs => {
      logs.map(log => {
        const { contestNumber, roundNumber, lowRiskVaultROI, mediumRiskVaultROI, highRiskVaultROI } = log.args;
        setRoundResults(() => {
          return {
            contestNumber: Number(contestNumber),
            roundNumber: Number(roundNumber),
            lowRiskVaultROI: Number(lowRiskVaultROI),
            mediumRiskVaultROI: Number(mediumRiskVaultROI),
            highRiskVaultROI: Number(highRiskVaultROI),
          };
        });
      });
      setIsRoundEnd(true);
    },
  });

  return (
    <>
      <MetaHeader />

      <div className="bg-base-300 min-h-[468px]">
        <div className="rounded-xl grid grid-cols-1 2xl:grid-cols-3 gap-14 p-14">
          <div>
            <Leaderboard />
          </div>
          <div>
            <Portfolio />
          </div>
          <div>
            <Round />
          </div>
        </div>
      </div>
      <div className="p-5 xl:p-14 bg-base-300">
        <div className="grid grid-cols-1 lg:grid-cols-2 2xl:grid-cols-3 gap-14">
          <Vaults />
        </div>
      </div>

      {showRoundStartModal && (
        <div className="modal modal-open">
          <div className="modal-box">
            <h3 className="font-cubano text-3xl text-center mb-5">Round {roundNumber} Started!</h3>
            <p className="text-center text-xl">Allocate your funds before the clock runs out!</p>
            <div className="modal-action">
              <button className="btn" onClick={() => setShowRoundStartModal(false)}>
                Close
              </button>
            </div>
          </div>
        </div>
      )}

      {isRoundEnd && (
        <div className="modal modal-open">
          <div className="modal-box p-5">
            <h3 className="font-cubano text-3xl text-center mb-5">End of Round {roundResults.roundNumber}</h3>
            <div className="overflow-x-auto">
              <table className="table text-xl bg-base-300">
                <thead>
                  <tr className="text-xl">
                    <th>Vault</th>
                    <th>ROI</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <th>Low Risk</th>
                    <td>{roundResults.lowRiskVaultROI}%</td>
                  </tr>
                  <tr>
                    <th>Medium Risk</th>
                    <td>{roundResults.mediumRiskVaultROI}%</td>
                  </tr>
                  <tr>
                    <th>High Risk</th>
                    <td>{roundResults.highRiskVaultROI}%</td>
                  </tr>
                </tbody>
              </table>
            </div>
            <div className="modal-action">
              <button className="btn" onClick={() => setIsRoundEnd(false)}>
                Close
              </button>
            </div>
          </div>
        </div>
      )}
    </>
  );
};

export default Home;
